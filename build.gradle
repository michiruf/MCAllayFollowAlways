plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'com.modrinth.minotaur' version '2.+'
}

version = project.mod_version
group = project.maven_group

repositories {
    // Owo config
    maven { url 'https://maven.wispforest.io' }
    mavenCentral()
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    // Owo config
    annotationProcessor modImplementation("io.wispforest:owo-lib:0.9.2+1.19")

    // Tests
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
}

modrinth {
    projectId = 'allay-follow-always'
    versionNumber = project.version
    versionType = 'alpha'
    gameVersions = ['1.19.2']
    loaders = ['fabric']
    dependencies {
        required.project 'fabric-api'
        required.project 'owo-lib'
    }
    uploadFile = remapJar

    // Use the environment variable `$MODRINTH_TOKEN` for the token
    // token = 'mySecretToken'
}


processResources {
    inputs.property 'version', project.version
    filteringCharset 'UTF-8'

    filesMatching('fabric.mod.json') {
        expand 'version': project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archives_base_name}" }
    }
}

test {
    useJUnitPlatform()
    maxHeapSize = '1G'
    testLogging {
        events 'passed'
    }
}
